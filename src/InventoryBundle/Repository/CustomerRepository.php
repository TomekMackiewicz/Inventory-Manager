<?php

namespace InventoryBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CustomerRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends EntityRepository {

	public function boxesInCountByCustomers() {
		$boxesCountByCustomers = $this->getEntityManager()->createQuery(
			"SELECT c.name, count(b.id) as boxCount 
			 FROM InventoryBundle:Customer c 
			 LEFT JOIN c.boxes b
			 WHERE b.status='In'
			 GROUP BY c.name"
		)->getResult();
		return $boxesCountByCustomers;
	}

	public function boxesOutCountByCustomers() {
		$boxesCountByCustomers = $this->getEntityManager()->createQuery(
			"SELECT c.name, count(b.id) as boxCount 
			 FROM InventoryBundle:Customer c 
			 LEFT JOIN c.boxes b
			 WHERE b.status='Out'
			 GROUP BY c.name"
		)->getResult();
		return $boxesCountByCustomers;
	}

	public function boxesInCountByCustomer($id) {
		$boxesCountByCustomers = $this->getEntityManager()->createQuery(
			"SELECT c.name, count(b.id) as boxCount 
			 FROM InventoryBundle:Customer c 
			 LEFT JOIN c.boxes b
			 WHERE b.status='In'
			 AND c.id=$id
			 GROUP BY c.name"
		)->getResult();
		return $boxesCountByCustomers;
	}

	public function boxesOutCountByCustomer($id) {
		$boxesCountByCustomers = $this->getEntityManager()->createQuery(
			"SELECT c.name, count(b.id) as boxCount 
			 FROM InventoryBundle:Customer c 
			 LEFT JOIN c.boxes b
			 WHERE b.status='Out'
			 AND c.id=$id
			 GROUP BY c.name"
		)->getResult();
		return $boxesCountByCustomers;
	}

	/**
	 * @param string $role
	 *
	 * @return array
	 */
	public function excludeAdmin($role)
	{
	    $qb = $this->_em->createQueryBuilder();
	    $qb->select('c')
	        ->from($this->_entityName, 'c')
	        ->where('c.roles NOT LIKE :roles')
	        ->setParameter('roles', '%"'.$role.'"%');

	    return $qb->getQuery()->getResult();
	}

}
